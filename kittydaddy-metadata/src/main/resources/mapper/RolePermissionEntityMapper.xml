<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kittydaddy.metadata.system.dao.RolePermissionEntityMapper" >
  <resultMap id="BaseResultMap" type="com.kittydaddy.metadata.system.domain.RolePermissionEntity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="permission_id" property="permissionId" jdbcType="VARCHAR" />
    <result column="permission_code" property="permissionCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, role_name, permission_id, permission_code, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from system_role_permission where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="queryRolePermissionByRoleId" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
       from system_role_permission where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  
  <!--根据roleId删除角色权限关系-->
  <delete id="deleteByRoleId"  >
     delete from system_role_permission where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  
  <!--根据权限id进行删除-->
  <delete id="deleteByPermissionId"  >
     delete from system_role_permission where permission_id = #{permissionId,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteByPrimaryKey"  >
    delete from system_role_permission where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.kittydaddy.metadata.system.domain.RolePermissionEntity" >
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
       SELECT UUID() FROM dual
    </selectKey>
    insert into system_role_permission (id, role_id, role_name, 
      permission_id, permission_code, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, 
      #{permissionId,jdbcType=BIGINT}, #{permissionCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.kittydaddy.metadata.system.domain.RolePermissionEntity" >
    insert into system_role_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="permissionCode != null" >
        permission_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null" >
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="permissionCode != null" >
        #{permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kittydaddy.metadata.system.domain.RolePermissionEntity" >
    update system_role_permission
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null" >
        permission_id = #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="permissionCode != null" >
        permission_code = #{permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kittydaddy.metadata.system.domain.RolePermissionEntity" >
    update system_role_permission
    set role_id = #{roleId,jdbcType=BIGINT},
      role_name = #{roleName,jdbcType=VARCHAR},
      permission_id = #{permissionId,jdbcType=BIGINT},
      permission_code = #{permissionCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>